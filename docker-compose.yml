services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: ktech_zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped
    env_file:
      - .env

  kafka:
    image: wurstmeister/kafka
    container_name: ktech_kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_ADVERTISED_HOST_NAME}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "test_topic:1:1"
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_LOG_RETENTION_BYTES: 4073741824
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_RETENTION_CHECK_INTERVAL_MS: 300000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    env_file:
      - .env

  cassandra:
    image: bitnami/cassandra:latest
    platform: linux/amd64
    container_name: ktech_cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_HEAP_NEW_SIZE=100M
      - CASSANDRA_MAX_HEAP_SIZE=512M
    volumes:
      - cassandra_data:/bitnami
    restart: unless-stopped
    env_file:
      - .env

  postgres:
    image: postgres:9.6
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    env_file:
      - .env

  webserver:
    build: ./dockerfiles
    restart: always
    depends_on:
      - postgres
      - cassandra
      - kafka
    environment:
      - LOAD_EX=${LOAD_EX}
      - EXECUTOR=${EXECUTOR}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - ./dags:/usr/local/airflow/dags
      # - ./plugins:/usr/local/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    env_file:
      - .env

volumes:
  cassandra_data: